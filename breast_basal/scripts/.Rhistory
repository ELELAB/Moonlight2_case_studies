geom_col() +
geom_text(aes(label=ifelse(patient_group=="High", Patient_ID, "")))
maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
#filter(VAF < 0.05 | t_depth < 10 | t_alt_count <= 3) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() )+
geom_text(aes(label=ifelse(patient_group=="High", Patient_ID, "")))
maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
#filter(VAF < 0.05 | t_depth < 10 | t_alt_count <= 3) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() )+
geom_label(aes(label=ifelse(patient_group=="High", Patient_ID, "")))
maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
#filter(VAF < 0.05 | t_depth < 10 | t_alt_count <= 3) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank() )+
geom_text(aes(label=ifelse(patient_group=="High", Patient_ID, "")))
plot1 <- maf_p %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")),
element_text(angle = 90, vjust = 0.5, hjust=1))
geom_text
?geom_text
plot1 <- maf_p %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))
plot2 <- maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))
gridExtra::grid.arrange(plot1,plot2, ncol = 2)
plot1 <- maf_p %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))
plot2 <- maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))
gridExtra::grid.arrange(plot1,plot2, ncol = 2)
plot1 <- maf_p %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))
plot2 <- maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))
gridExtra::grid.arrange(plot1,plot2, ncol = 2)
plot1 <- maf_p %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))+
scale_y_continuous(limits = c(0,1900))
View(plot1)
plot1
gridExtra::grid.arrange(plot1,plot2, nrow = 2)
plot2 <- maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
""))) +
scale_y_continuous(limits = c(0,1900))
plot1 <- maf_p %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))+
scale_y_continuous(limits = c(0,1900))
plot2 <- maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
""))) +
scale_y_continuous(limits = c(0,1900))
gridExtra::grid.arrange(plot1,plot2, nrow = 2)
plot1_2<-gridExtra::grid.arrange(plot1,plot2, nrow = 2)
ggsave(plot1_2, filename = "../results/98_mutations_per_patient.png")
library(tidyverse)
library(enrichR)
library(gridExtra)
source("99_functions.R")
#Load data -------------------------
load("../results/Oncogenic_mediators_mutation_summary.rda")
load("../results/DEG_Mutations_Annotations.rda")
load("../data/DMA_Basal.rda")
# Enrichment Analysis ----------------------------------------------
dbs <- c("GO_Molecular_Function_2021", "GO_Cellular_Component_2021",
"GO_Biological_Process_2021", "KEGG_2021_Human")
Drivers <- Oncogenic_mediators_mutation_summary %>% filter( CScape_Driver >= 1)
Moonlight_TSG <- DMA_Basal$TSG
Moonlight_OCG <- DMA_Basal$OCG
oncogenes_enrich <- enrichr(genes = Moonlight_OCG, databases = dbs)
tumor_enrich <- enrichr(genes =Moonlight_TSG, databases = dbs)
p2 <- goplot(data = oncogenes_enrich$GO_Molecular_Function_2021, title = "Oncogenes" , top =10)
p3 <- goplot(data = tumor_enrich$GO_Molecular_Function_2021, title = "Tumor suppressors", top =10)
grid.arrange(p2, p3,ncol=2)
p2 <- goplot(data = oncogenes_enrich$GO_Biological_Process_2021, title = "Oncogenes" , top =10)
p3 <- goplot(data = tumor_enrich$GO_Biological_Process_2021, title = "Tumor suppressors", top =10)
grid.arrange(p2, p3,ncol=2)
p2 <- goplot(data = oncogenes_enrich$GO_Cellular_Component_2021, title = "Oncogenes" , top =10)
p3 <- goplot(data = tumor_enrich$GO_Cellular_Component_2021, title = "Tumor suppressors", top =10)
p2 <- goplot(data = oncogenes_enrich$KEGG_2021_Human, title = "Oncogenes" , top =10)
p3 <- goplot(data = tumor_enrich$KEGG_2021_Human, title = "Tumor suppressors", top =10)
### All in one plot -----------------------------------------
onco_complete <- rbind(oncogenes_enrich$GO_Molecular_Function_2021, oncogenes_enrich$GO_Biological_Process_2021,
oncogenes_enrich$KEGG_2021_Human) %>% filter(Adjusted.P.value < 0.05)
tumor_complete <- rbind( tumor_enrich$GO_Molecular_Function_2021, tumor_enrich$GO_Biological_Process_2021,
tumor_enrich$KEGG_2021_Human) %>% filter(Adjusted.P.value < 0.05)
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300)
View(goplot)
source("99_functions.R")
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300, scale = 0.5)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 6.6, height = 5, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 6.6, height = 5, units = "cm", dpi = 300, scale = 4)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 1560, height = 1181, units = "px", dpi = 300)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
dpi = 300)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13,2, height = 10, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13,2, height = 10, units = "cm", dpi = 300, scale = 2)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm", dpi = 300, scale = 4)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.eps",
width = 13.2, height = 10, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.eps",
width = 13.2, height = 10, units = "cm", dpi = 300)
warnings()
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.pdf",
width = 13.2, height = 10, units = "cm", dpi = 300)
warnings()
source("99_functions.R")
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.pdf",
width = 13.2, height = 10, units = "cm", dpi = 300)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.pdf",
width = 13.2, height = 10, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300)
source("99_functions.R")
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm", dpi = 300, scale = 0.5)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm", dpi = 300, scale = 2)
source("99_functions.R")
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/0
)
))
Z
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm", dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm")#, #dpi = 300, scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm", scale = 2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm", scale = 4)
source("99_functions.R")
myplot <- data %>% separate(col = Overlap, into = c('Count','Total'),
sep ="/", remove =FALSE) %>%
mutate(Count  = as.numeric(Count),
Gene.Ratio = round(Count/as.numeric(Total), 2)) %>%
slice_min(order_by = Adjusted.P.value,n = top, with_ties = FALSE) %>%
ggplot(aes(x = Gene.Ratio, y = reorder(Term, -Adjusted.P.value), color = Adjusted.P.value , size = Count )) +
geom_point() +
scale_y_discrete(labels = function(Term) str_wrap(Term, width =30))+
scale_color_gradient(low = "red", high = "blue") +
theme_bw() +
#theme(text = element_text(size = 16))+
theme(
text = element_text(size = 10, family="Arial")) +
#axis.title.x = element_text(size= 4),#, family="Arial"),
#axis.title.y = element_text(size= 4))+#, family="Arial"))+
ylab("") +
xlab("Gene Ratio") +
ggtitle(title) +
guides(
color = guide_colorbar(order = 1),
fill = guide_legend(order = 1))
source("99_functions.R")
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.tiff",
width = 6.6, height = 5, units = "cm", scale = 4)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300)
source("99_functions.R")
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300)
source("99_functions.R")
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
width = 13.2, height = 10, units = "cm", dpi = 300)
source("99_functions.R")
> p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
> p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
> go_plot <- grid.arrange(p2, p3,ncol=2)
> ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.tiff",
+        width = 13.2, height = 10, units = "cm", dpi = 300)
source("99_functions.R")
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG2.pdf",
width = 19, height = 12, units = "cm")
library(tidyverse)
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.pdf",
width = 19, height = 12, units = "cm")
View(goplot)
source("99_functions.R")
library(enrichR)
library(gridExtra)
p2 <- goplot(data = onco_complete, title = "Oncogenes" , top =15)
p3 <- goplot(data = tumor_complete, title = "Tumor suppressors", top =15)
go_plot <- grid.arrange(p2, p3,ncol=2 )
ggsave(go_plot, filename = "../results/05_GO_KEGG_top_adjpval_OCG_TSG.pdf",
width = 19, height = 12, units = "cm")
#same as above but only driver mutations
driver_var_class <-DEG_Mutations_Annotations %>% filter(!is.na(Moonlight_Oncogenic_Mediator),
#CScape_Mut_Class != 'No_mutations'.
CScape_Mut_Class == 'Driver') %>%
ggplot(aes(x = Variant_Classification) , alpah = 0.8)+
geom_bar(aes(y = ..prop.., group = 1, fill = 1), stat = 'count')+
scale_y_continuous(labels = scales::percent_format())+
facet_wrap(facets = vars(Moonlight_Oncogenic_Mediator)) +
theme_bw()+
labs(y = 'Percent',  x = 'Variant Classification')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggsave(driver_var_class, filename = "../results/05_variant_class_percent_driver_TSG_OCG.pdf",
width = 15, height = 12, units = "cm" )
# This scriptcontisns the investigation of MAF quality
# the purpose were to determine thresholds of VAF, tumor and normal depth, and
# variant alle count.
# Libraries -----------------------
library(tidyverse)
library(gridExtra)
# Load data -----------------------
maf <- read.csv("../data/rawdata/mutations.csv")  %>%
mutate(VAF = t_alt_count/t_depth,
Patient_ID = as.factor(X ))
# Investigation -------------------
# General density plots of scores ------------------------------
maf %>% filter(t_depth < 600) %>%
ggplot(aes(x = t_depth))+
geom_density()
maf %>% #filter(n_depth < 600) %>%
ggplot(aes(x = n_depth))+
geom_density()
maf %>% #filter(t_alt_count < 200) %>%
ggplot(aes(x = t_alt_count))+
geom_density()
maf  %>% filter(VAF < 100) %>%
ggplot(aes(x = VAF)) +
geom_density()
maf %>%
ggplot(aes(x = Patient_ID)) +
geom_bar()
# ALL in one plot:
# maf %>% mutate(VAF = t_alt_count/t_depth) %>%
#   filter(VAF < 0.25) %>% arrange(VAF) %>%
#   muatete(ID = row_number(-Score))
#   pivot_longer(cols = c(t_alt_count, t_depth, VAF),
#                 names_to = 'Type',
#               values_to = 'Number') %>%
#   ggplot(aes(x = fct_reorder2(.f =ID, VAF), y = Number, color = Type)) +
#   geom_point() +
#   facet_wrap(vars(Type), scale = 'free', nrow = 3)
#split tree way sorted by VAF -----------------------------------------
p1 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.25,
t_alt_count >= 3,
t_depth >= 10) %>%
ggplot(aes(x = fct_reorder(.f =ID, VAF))) +
geom_point(aes(y = VAF))
p2 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.25,
t_alt_count >= 3,
t_depth >= 10) %>%
ggplot(aes(x = fct_reorder(.f =ID, VAF))) +
geom_point(aes(y=t_depth))
p3 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.25,
t_alt_count >= 3,
t_depth >= 10) %>%
ggplot(aes(x = fct_reorder(.f =ID, VAF))) +
geom_point(aes(y=t_alt_count))
gridExtra::grid.arrange(p1,p2,p3, nrow = 3)
#split tree way sorted by t_alt_count -------------------------------------
pp1 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.25,
t_alt_count >= 3,
t_depth >= 10) %>%
ggplot(aes(x = fct_reorder(.f =ID, t_alt_count))) +
geom_point(aes(y = VAF))
pp2 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.25,
t_alt_count >= 3,
t_depth >= 10) %>%
ggplot(aes(x = fct_reorder(.f =ID, t_alt_count))) +
geom_point(aes(y=t_depth))
pp3 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.25,
t_alt_count >= 3,
t_depth >= 10) %>%
ggplot(aes(x = fct_reorder(.f =ID, t_alt_count))) +
geom_point(aes(y=t_alt_count))
gridExtra::grid.arrange(pp1,pp2,pp3, nrow = 3)
# Count mutations --------------------------------------------
#Mutations with low VAF and Count
maf %>% filter(VAF > 0.05, #     %>% count()#,
t_alt_count >= 3) %>% count()
#t_depth >= 10)
maf %>% filter(VAF < 0.05, t_depth < 30 ) %>% count()
maf %>% filter(VAF < 0.05 | t_depth < 50 | t_alt_count <= 3) %>% count()
# Check
p1 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.05,
t_alt_count >= 8) %>%
ggplot(aes(x = fct_reorder(.f =ID, t_alt_count))) +
geom_point(aes(y = VAF))
p2 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.05,
t_alt_count >= 8) %>%
ggplot(aes(x = fct_reorder(.f =ID, t_alt_count))) +
geom_point(aes(y=t_depth))
p3 <- maf %>% mutate(VAF = t_alt_count/t_depth,
ID = as.factor(...1 )) %>%
filter(VAF < 0.05,
t_alt_count >= 8) %>%
ggplot(aes(x = fct_reorder(.f =ID, t_alt_count))) +
geom_point(aes(y=t_alt_count))
gridExtra::grid.arrange(p1,p2,p3, nrow = 3)
# Sort Patients into groups -----------------------------------------------
high_patients <- maf %>% separate(col = Tumor_Sample_Barcode,
into = "Patient_ID", sep = 12) %>%
group_by(Patient_ID) %>%  summarise(n = n()) %>%
slice_max(n, n = 7) %>% filter(!is.na(Patient_ID)) %>% pull(Patient_ID)
low_patients <- maf %>% separate(col = Tumor_Sample_Barcode,
into = "Patient_ID", sep = 12) %>%
filter(!(Patient_ID %in% high_patients)) %>%  pull(Patient_ID) %>% unique()
maf_p <- maf %>%  separate(col = Tumor_Sample_Barcode,
into = "Patient_ID", sep = 12) %>%
mutate(patient_group = case_when(Patient_ID %in% high_patients ~ 'High',
Patient_ID %in% low_patients ~'Low'))
## Investigate difference between patient groups ----------------
maf_p %>% filter(VAF > 0.05 | t_depth > 50 | t_alt_count >= 5)  %>%
ggplot(aes(x = VAF, color = patient_group), alpha = 0.8) +
geom_density()
maf_p %>% filter(t_depth < 400) %>%
ggplot(aes(x = t_depth, color = patient_group), alpha = 0.8)+
geom_density()
maf_p %>% filter(n_depth < 400) %>%
ggplot(aes(x = n_depth, color = patient_group), alpha = 0.8)+
geom_density()
maf_p %>% filter(t_alt_count < 300) %>%
ggplot(aes(x = t_alt_count,color = patient_group), alpha = 0.8)+
geom_density()
maf_p %>% #filter(VAF < 0.05 | t_depth < 30 | t_alt_count <= 5) %>%
ggplot(aes(x = patient_group, y = VAF, color = patient_group), alpha = 0.9)+
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75))
maf_p %>% filter(VAF > 0.05 | t_depth > 30 | t_alt_count >= 5)  %>%
ggplot(aes(x = patient_group, y = VAF, color = patient_group), alpha = 0.9)+
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75))
x1 <- maf_p %>% filter(VAF < 0.2 | t_depth < 10 | t_alt_count <= 3,
patient_group == 'High') %>%
pull(VAF)
x2 <- maf_p %>% filter(VAF < 0.2 | t_depth < 10 | t_alt_count <= 3,
patient_group == 'Low') %>% pull(VAF)
t.test(x1,x2, alternative = 'two.sided')
plot1 <- maf_p %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
"")))+
scale_y_continuous(limits = c(0,1900))
plot2 <- maf_p %>%  filter(VAF > 0.05 & n_depth > 10 & t_depth > 30, t_alt_count >= 5)   %>%
group_by(Patient_ID, patient_group) %>% summarise(count = n()) %>%
ggplot(aes(x = Patient_ID, y = count, fill = patient_group)) +
geom_col() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
geom_text(aes(label=ifelse(patient_group=="High",
Patient_ID,
""))) +
scale_y_continuous(limits = c(0,1900))
plot1_2<-gridExtra::grid.arrange(plot1,plot2, nrow = 2)
ggsave(plot1_2, filename = "../results/98_mutations_per_patient.png")
ggsave(plot1_2, filename = "../results/98_mutations_per_patient.pdf",
width = 18, height = 7, units = "cm")
ggsave(plot1_2, filename = "../results/98_mutations_per_patient.pdf",
width = 18, height = 12, units = "cm")
